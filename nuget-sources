#!/usr/bin/env xonsh

# MIT License
#
# Copyright (c) 2021 SIL International
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# Output a flatpak yaml sources list from a nuget packages.config. NuGet packages will be downloaded (and cached) to compute their checksums.
# Usage: nuget-sources path/to/packages.config path/to/dest/dir/in/flatpak sources-filename.yml
# Dependencies: sudo apt install xonsh wget

import sys
import xml.etree.ElementTree as ET
$RAISE_SUBPROC_ERROR = True

# trace on
# $XONSH_TRACE_SUBPROC = True

packagesConfigPath = sys.argv[1]
destdir = sys.argv[2]
outputSourcesPath=sys.argv[3]

nugetSources = []
cachePath = '{}/nuget-sources-flatpak'.format($XDG_CACHE_HOME)
mkdir -p @(cachePath)

def processPackagesConfig(path):
    packagesTree = ET.parse(path)
    root = packagesTree.getroot()
    packageElements = root.findall('./package')
    for package in packageElements:
        name = package.attrib['id'] #.lower()
        version = package.attrib['version'] #.lower()
        writeSourceRecord(name,version)
    
def writeSourceRecord(name, version):
    url = 'https://api.nuget.org/v3-flatcontainer/{}/{}/{}.{}.nupkg'.format(name, version, name, version)
    wget --timestamping --directory-prefix=@(cachePath) @(url)
    filename = '{}.{}.nupkg'.format(name, version)
    pathToCachedFile = '{}/{}'.format(cachePath,filename)
    sha512 = $(sha512sum @(pathToCachedFile) | perl -p -e 's/ .*$//').rstrip()
    nugetSources.append('  - type: file')
    nugetSources.append('    url: {}'.format(url))
    nugetSources.append('    sha512: {}'.format(sha512))

processPackagesConfig(packagesConfigPath)

with open(outputSourcesPath, 'w') as out:
    for line in nugetSources:
        out.write(line + '\n')
