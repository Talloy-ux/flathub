# FieldWorks flatpak package build specification
#
# Copyright (c) 2021 SIL International. MIT License.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

app-id: org.sil.FieldWorks

# org.gnome.Platform provides some pieces that we would need to manually specify if we use org.freedesktop.Platform.
runtime: org.gnome.Platform
# Target a runtime that is most similar to Ubuntu 20.04, for which we can easily build and test on without flatpak.
runtime-version: "3.36"
sdk: org.gnome.Sdk
# Not sure if this may help get mono debugging working again:
# sdk-extensions:
#   - org.freedesktop.Sdk.Extension.mono5
#   - org.freedesktop.Sdk.Extension.dotnet

command: fieldworks-flex
finish-args:
  - --socket=x11
  - --share=ipc
  # FieldWorks can synchronize project data over the network with other users.
  - --share=network
  # FieldWorks allows playing sound files and playing and recording in audio writing systems.
  - --socket=pulseaudio
  # Users need to be able to persistently link to files that they want to show in their dictionary, such as pictures.
  # Users also need to be able to import language and dictionary data, as well as choose and restore from project backup
  # files. Flatpak provides Portals to receive permission for a specific file when the user specfies it
  # ( https://docs.flatpak.org/en/latest/sandbox-permissions.html#portals ), though this may only serve some of these
  # needs (like choosing a backup file to restore) and not others (like persistently linking to media files, without
  # copying the actual data into their project), so implemeting Portals would only be helpful for some of the data
  # access needs.
  - --filesystem=home:ro
  # Data, including projects.
  - --filesystem=xdg-data/fieldworks:create
  # Writing system definition files. Shared with other applications.
  - --filesystem=xdg-data/SIL/WritingSystemRepository:create
  # Encoding Converter location for configuration and potentially user-made converters. Shared with other applications.
  - --filesystem=xdg-data/SIL/encoding-converters:create
  # Configuration and settings of FieldWorks and included components.
  - --filesystem=xdg-config/fieldworks:create
  - --filesystem=~/.mono/registry/CurrentUser/software/sil:create
  # Default location to write a project backup in the backup dialog.
  #- --filesystem=xdg-documents/fieldworks/backups:create
  #- --filesystem=xdg-documents/fieldworks:create
  # Users can create a launcher to a specific project by clicking File - Project Management - Create Shortcut on
  # Desktop.
  - --filesystem=xdg-desktop:rw
  # Directory for libpalaso GlobalMutex.
  - --filesystem=xdg-run/sil-lock:create
  # Directory for libpalaso GlobalMutex (being phased out).
  #- --filesystem=/var/lock:rw
  # Shared writing system and encoding converters data location used by FieldWorks .deb packages, that may have
  # Encoding converters older shared location that some users might rely on for an easier transition and
  # continuing to use the same encoding converters.
  - --filesystem=/var/lib/fieldworks:ro
  # FieldWorks uses FlexBridge to synchronize data over the network or by USB
  # Flash Drives. FlexBridge uses NDesk D-Bus
  # (https://github.com/sillsdev/dbus-sharp) to query for avaliable USB Flash
  # Drives. This crashes without access to the system D-Bus, such as when
  # clicking "Get project from a colleague" from the welcome dialog.
  - --socket=system-bus

modules:
  - name: fieldworks
    buildsystem: simple
    build-options:
      env:
        PREFIX: '/app'
        PERL5LIB: '/app/perl-modules/lib/perl5'
        MONO_PREFIX: '/app'
        MONO_SILPKGDIR: '/app'
        NUGET_DEST: 'fw/packages'
        FW_ROOT_PATH: '/run/build/fieldworks/fw'
        # MSBUILD_ARGS can include `-verbosity:detailed' or be omitted.
        #MSBUILD_ARGS: '-verbosity:detailed'
        INSTALLATION_PREFIX: '/app'
        RUNMODE: 'PACKAGING'
        FW_PACKAGE_DEBUG: 'true'
        BUILD_CONFIG: 'Release'
    build-commands:
      # MANUAL rm ~/fwrepo/fw/Output ~/fwrepo/fw/Obj_x86_64 ~/fwrepo/fw/Output_x86_64  ~/fwrepo/fw/Localizations/Output ~/fwrepo/fw/Localizations/l10ns   -rf ; [[ -f ~/fwrepo/fw/Downloads/Crowdin.zip ]] || wget https://github.com/sillsdev/FwLocalizations/releases/download/v9.0.17-14-g37c0f8f/crowdin.zip -O ~/fwrepo/fw/Downloads/Crowdin.zip ; export FW_PACKAGE_DEBUG=true ; Build/run-in-environ make BUILD_TYPE=d BUILD_CONFIG=Debug MSBUILD_ARGS='-verbosity:detailed' build-package-for-flatpak |& tee /tmp/log-fw-$(date -Is|tr : -).txt
      - echo "Assemblies used in build:"
      - find -type f \( -name \*.dll -o -name \*.so\* \) -print0 | xargs -0 sha256sum
      - echo "End list of assemblies."

      # MANUAL: export BUILD_ROOT=$FW_ROOT_PATH BUILD_TYPE=d BUILD_CONFIG=Debug disableDownloads=true ; export LcmLocalArtifactsDir="$BUILD_ROOT/../liblcm/artifacts/$BUILD_CONFIG" ; mkdir -p $LcmLocalArtifactsDir ; cd $FW_ROOT_PATH/Build ;  ${FW_ROOT_PATH}/Build/run-in-environ  msbuild /t:refreshTargets
      # MANUAL: export PLATFORM=x86_64 && cd $FW_ROOT_PATH/Build && ${FW_ROOT_PATH}/Build/run-in-environ  msbuild  '/t:remakefw' /property:config=$BUILD_CONFIG /property:Platform=$PLATFORM /property:packaging=yes "/p:OutputPath=${FW_ROOT_PATH}/Output/Debug"

      # Apply any outstanding FwBuildTasks code changes. (This would not be
      # normal, but can be useful when developing.)
      - cd ${FW_ROOT_PATH}/Build/Src/FwBuildTasks && ${FW_ROOT_PATH}/Build/run-in-environ msbuild

      - cd ${FW_ROOT_PATH} && ${FW_ROOT_PATH}/Build/run-in-environ make BUILD_TYPE=d BUILD_CONFIG=${BUILD_CONFIG} disableDownloads=true build-package-for-flatpak
      - cd ${FW_ROOT_PATH} && perl -pi -e '/<runtime>/ and s/^/  <dllmap dll="libdl.so" target="libdl.so.2" \/>\n/' $(find -name SIL.LCModel.Core.dll.config)

      - cd ${FW_ROOT_PATH} && ${FW_ROOT_PATH}/Build/run-in-environ make BUILD_TYPE=d BUILD_CONFIG=${BUILD_CONFIG} disableDownloads=true install-for-flatpak

      - mv -v /app/share/applications/fieldworks-applications.desktop /app/share/applications/org.sil.FieldWorks.desktop
      - perl -pi -e 's/fieldworks-flex.png/org.sil.FieldWorks.png/g' /app/share/applications/org.sil.FieldWorks.desktop
      - mv -v /app/share/icons/hicolor/128x128/apps/fieldworks-flex.png /app/share/icons/hicolor/128x128/apps/org.sil.FieldWorks.png
      - mv -v /app/share/icons/hicolor/64x64/apps/fieldworks-flex.png /app/share/icons/hicolor/64x64/apps/org.sil.FieldWorks.png
    cleanup:
      - '/include'
      - '/lib/*/include'
      - '*.a'
    sources:
      - type: git
        dest: fw

        # Build from main repo
        #url: https://github.com/sillsdev/FieldWorks.git
        #branch: support/9.0
        #tag: TODO
        #commit: TODO

        # Build from commit still in review
        url: https://gerrit.lsdev.sil.org/FieldWorks
        commit: 70ed3461753d966d20227d7c9afb8427c6a1ea8f

        # Build from local repo
        #url: ../fw
        #branch: feature/flatpak
      - type: git
        # liblcm is cloned for use during localization. But the actual liblcm assemblies used are fetched separately.
        dest: liblcm
        url: https://github.com/sillsdev/liblcm.git
        branch: master
        commit: 6a6ed9bbe8433352769d6909079fe54b77368b99
        # tag: FieldWorks9.0.16
        # For local use:
        # url: ../liblcm
        # commit: HEAD
      # - type: dir
      #   # Locally copying in liblcm artifacts (which are otherwise downloaded as precompiled dependencies).  Build with liblcm$ ./build.sh Release Rebuild
      #   path: ../liblcm/artifacts/Release
      #   dest: local-liblcm-Release
      # - type: dir
      #   # Locally copying in libpalaso (which is otherwise downloaded as precompiled dependencies). Build with libpalaso$ build/download-dependencies && build/build Compile ReleaseMono
      #   path: ../../projects/libpalaso/output/ReleaseMono
      #   dest: local-libpalaso-ReleaseMono
      - type: git
        dest: libcom
        url: https://github.com/sillsdev/libcom.git
        # Branch develop
        tag: fieldworks-9.0.17
        commit: 035225805e477061e9a2d72180a96bcaa7cc1952
      - type: git
        dest: fw/DistFiles/Helps
        url: https://github.com/sillsdev/FwHelps.git
        # Branch support/9.0
        tag: FieldWorks9.0.17
        commit: 02c9b5b0fd293e883b4d19be8439905595189ac1
      - type: git
        dest: fw/Localizations
        url: https://github.com/sillsdev/FwLocalizations.git
        # Branch develop
        tag: FieldWorks9.0.17
        commit: 6d09370772ecd99f3efbe776c55c6561d1b7af88
      - type: file
        url: https://github.com/sillsdev/FwLocalizations/releases/download/v9.0.17-14-g37c0f8f/crowdin.zip
        sha512: 08586f7479d5c99d668d4ec92a1824e02f2982683abf3d13549e07dc1378eaf1204547a1ce6cf9a29f4a9ee418aeaf558e00a13e25e9bd41a0de880a20de1f39
        dest: fw/Downloads/
      - type: shell
        commands:
          - |
            mv fw/Downloads/crowdin.zip fw/Downloads/Crowdin.zip
      # FW nuget dependencies
      # Preview updates via FieldWorks.git: git log -p -- Build/nuget-{common,linux}/packages.config
      # To regenerate input sources:
      #   ./nuget-sources ~/fwrepo/fw/Build/nuget-linux/packages.config packages fieldworks-sources-nuget-linux.yml
      #   ./nuget-sources ~/fwrepo/fw/Build/nuget-common/packages.config packages fieldworks-sources-nuget-common.yml
      - fieldworks-sources-nuget-common.yml
      - fieldworks-sources-nuget-linux.yml
      - type: shell
        # Extract nuget packages. The 'type: archive', 'archive-type: zip' had some trouble working, so manually extract.
        commands:
          - |
            for package in *.nupkg; do
              mkdir -p "${NUGET_DEST}/$(basename "${package}" .nupkg)" &&
              unzip "${package}" -d "${NUGET_DEST}/$(basename "${package}" .nupkg)";
            done
            ls -al "${NUGET_DEST}"
      # FW dependencies
      # Find updates via FieldWorks.git with a command like:
      #   git log -p FieldWorks9.0.13..FieldWorks9.0.16 -- Build/mkall.targets
      # Manually apply changes by editing tc-inputs.yml.
      # Regenerate input sources:
      #   ./tc-sources tc-inputs.yml fieldworks-sources-tc.yml
      - fieldworks-sources-tc.yml
    modules:
      - name: libboost
        buildsystem: simple
        build-options:
          prefix: /app
        config-opts:
          - --prefix=/app
        build-commands:
          - ./bootstrap.sh
          # It installs to /usr/local unless I specify a prefix.
          - ./b2 install variant=release --prefix=/app
        cleanup:
          # Don't ship.
          - '*'
        sources:
          - type: archive
            url: https://boostorg.jfrog.io/artifactory/main/release/1.71.0/source/boost_1_71_0.tar.bz2
            sha512: b7937d50c4512cf13cadd0ca829de36cf2cbc6fb788f45b1d4565ad0753e2b206c545125a5862016c2f16016f2e4a6b687928963b466fff17c3e0a4437142c20
      # Remove the libenchant-dev module if the enchant in org.gnome.Sdk is sufficient. Test it in FW first w/o this.
      # - name: libenchant-dev
      #   buildsystem: simple
      #   build-commands:
      #     - ls -al; pwd
      #     - for package in *.deb; do mkdir "${package}-dir" && (cd "${package}-dir" && ar x ../"${package}") && tar -v -C / -x -f "${package}-dir"/data.tar.xz ; done
      #   sources:
      #     - type: file
      #       url: http://archive.ubuntu.com/ubuntu/pool/universe/e/enchant/libenchant-dev_1.6.0-11.3build1_amd64.deb
      #       sha256: edfca92d3c6fb0f7237057b02175a6de55bccda581fb53bbc536de2bfd857cb0
      #     - type: file
      #       url: http://archive.ubuntu.com/ubuntu/pool/universe/e/enchant/libenchant1c2a_1.6.0-11.3build1_amd64.deb
      #       sha256: 61fcfff6f79c871350b1c2f674bdf6f1cc19e9e808687f7abb005cdfc19264a6
      #     - type: file
      #       url: http://archive.ubuntu.com/ubuntu/pool/main/s/scowl/hunspell-en-us_2018.04.16-1_all.deb
      #       sha256: 804a6097f0034eea0edf7cbf30d75adb881933064ab6d65515159dbc1c89aeb6
      #     - type: file
      #       url: http://archive.ubuntu.com/ubuntu/pool/main/d/dictionaries-common/dictionaries-common_1.28.1_all.deb
      #       sha256: 5828e8d6973125cb19968eb345e2b5e08d207f73dac09c42f1ed9e81ca251431
      #     - type: file
      #       url: http://archive.ubuntu.com/ubuntu/pool/main/a/aspell/libaspell15_0.60.8-1build1_amd64.deb
      #       sha256: e693bec4fad44a18b9855ee26fc5abbe0df5dabba97fcdd4f2675b5b0ccd3997
      #     - type: file
      #       url: http://archive.ubuntu.com/ubuntu/pool/main/h/hunspell/libhunspell-1.7-0_1.7.0-2build2_amd64.deb
      #       sha256: a8851da5816b31753f0682bb78d98c5d29ec7ef22cf14546876eb0e8f668f295
      - name: dbus-glib
        # For Gecko.
        cleanup:
          - '/include'
          - '*.a'
        sources:
          - type: git
            url: https://salsa.debian.org/debian/dbus-glib.git
            tag: debian/0.110-5
            commit: 722fc1041fc8d975774b17a6cff0ec260e666172
      - name: libxklavier
        buildsystem: autotools
        cleanup:
          - '/include'
          - '*.a'
        sources:
          - type: git
            url: https://salsa.debian.org/gnome-team/libxklavier.git
            commit: 4cd9bfe37a52961270d588b37e617cbce8217e5a
            tag: debian/5.4-4
          - type: shell
            commands:
              - |
                for PATCH_FILE in $(cat debian/patches/series); do
                  patch -p1 -i debian/patches/${PATCH_FILE}
                done
      - name: gtkmm2.4
        config-opts:
          - --disable-documentation
        cleanup:
          - '/include'
          - '/lib/*/include'
          - '*.a'
        sources:
          - type: archive
            url: https://download.gnome.org/sources/gtkmm/2.24/gtkmm-2.24.5.tar.xz
            sha256: 0680a53b7bf90b4e4bf444d1d89e6df41c777e0bacc96e9c09fc4dd2f5fe6b72
          # - type: git
          #   url: https://gitlab.gnome.org/GNOME/gtkmm.git
          #   tag: "2.24.5"
          #   commit: 07fe88b054e91d10ec3bf32a85945cbc57248639
        modules:
          - name: atkmm1.6
            buildsystem: meson
            config-opts:
              # - --disable-documentation
              - -Dbuild-documentation=false
              - -Dbuild-demos=false
              - -Dbuild-tests=false
            cleanup:
              - '/include'
              - '/lib/*/include'
              - '*.a'
            sources:
              - type: git
                url: https://gitlab.gnome.org/GNOME/atkmm.git
                tag: "2.28.1"
                commit: 5d8721c5619b0d9c904f669f712db1d9ca7107f9
            modules:
              - name: glibmm2.4
                buildsystem: meson
                config-opts:
                  # - --disable-documentation
                  - -Dbuild-documentation=false
                  - -Dbuild-demos=false
                  - -Dbuild-tests=false
                cleanup:
                  - '/include'
                  - '/lib/*/include'
                  - '*.a'
                  - '*.la'
                sources:
                  - type: git
                    url: https://gitlab.gnome.org/GNOME/glibmm.git
                    tag: "2.64.2"
                    commit: e775940669cb6d93f37ddc2b4cd7da446dfa482c
                modules:
                  # - name: mm-common
                  #   buildsystem: meson
                  #   cleanup:
                  #     - '*'
                  #   sources:
                  #     - type: archive
                  #       url: https://download.gnome.org/sources/mm-common/1.0/mm-common-1.0.2.tar.xz
                  #       sha256: a2a99f3fa943cf662f189163ed39a2cfc19a428d906dd4f92b387d3659d1641d
                  #     # - type: git
                  #     #   url: https://gitlab.gnome.org/GNOME/mm-common.git
                  #     #   tag: "1.0.2"
                  #     #   commit: 85381b86dcc2490d2b080c178477df9eb65103ca
                  - name: libsigc++-2.0
                    # buildsystem: cmake
                    config-opts:
                      - --disable-documentation
                    cleanup:
                      - '/include'
                      - '/lib/*/include'
                      - '*.a'
                    sources:
                      # - type: archive
                      #   url: https://github.com/libsigcplusplus/libsigcplusplus/releases/download/2.10.2/libsigc++-2.10.2.tar.xz
                      #   sha256: b1ca0253379596f9c19f070c83d362b12dfd39c0a3ea1dd813e8e21c1a097a98
                      - type: git
                        url: https://github.com/libsigcplusplus/libsigcplusplus.git
                        tag: "2.10.2"
                        commit: 06fabac512bf81164d5b01f877927cb39e9db864
                    modules:
                      - name: mm-common
                        buildsystem: meson
                        cleanup:
                          - '*'
                        sources:
                          - type: archive
                            url: https://download.gnome.org/sources/mm-common/1.0/mm-common-1.0.2.tar.xz
                            sha256: a2a99f3fa943cf662f189163ed39a2cfc19a428d906dd4f92b387d3659d1641d
                          # - type: git
                          #   url: https://gitlab.gnome.org/GNOME/mm-common.git
                          #   tag: "1.0.2"
                          #   commit: 85381b86dcc2490d2b080c178477df9eb65103ca
                    # modules:
                    #   - name: mm-common
                    #     # build dependency for libsigc++
                    #     cleanup:
                    #       - '*'
                    #     sources:
                    #       - type: git
                    #         url: https://gitlab.gnome.org/GNOME/mm-common.git
                    #         tag: "1.0.3"
                    #         commit: d2006f9cc7df4746356ec6802a1c71d719015f26
          - name: pangomm
            buildsystem: meson
            config-opts:
              - -Dbuild-documentation=false
              - -Dbuild-demos=false
              - -Dbuild-tests=false
            cleanup:
              - '/include'
              - '/lib/*/include'
              - '*.a'
            sources:
              - type: git
                url: https://gitlab.gnome.org/GNOME/pangomm.git
                tag: "2.42.1"
                commit: 7dfc6c3372faaa4a7c492d08f09881b02095145b
            modules:
              - name: cairomm
                # buildsystem: meson
                config-opts:
                  - --disable-documentation
                  - --disable-demos
                  - --disable-tests
                  # - -Dbuild-documentation=false
                  # - -Dbuild-demos=false
                  # - -Dbuild-tests=false
                cleanup:
                  - '/include'
                  - '/lib/*/include'
                  - '*.a'
                sources:
                  - type: git
                    url: https://github.com/freedesktop/cairomm.git
                    branch: cairomm-1-12
                    commit: e9ef515b7b8db5b4f024ddfefe5dfc03f2b8ccea
                  # - type: archive
                  #   url: https://www.cairographics.org/releases/cairo-1.12.2.tar.xz
                  #   sha256: b786bc4a70542bcb09f2d9d13e5e6a0c86408cbf6d1edde5f0de807eecf93f96
          - name: gtk+2.0
            config-opts:
              - --disable-documentation
              - --disable-demos
              - --disable-tests
            cleanup:
              - '/include'
              - '/lib/*/include'
              - '*.a'
            sources:
              - type: archive
                url: http://archive.ubuntu.com/ubuntu/pool/main/g/gtk+2.0/gtk+2.0_2.24.32.orig.tar.xz
                sha256: b6c8a93ddda5eabe3bfee1eb39636c9a03d2a56c7b62828b359bf197943c582e
              # - type: archive
              #   url: https://download.gimp.org/pub/gtk/2.24/gtk+-2.24.5.tar.xz
              #   sha256: d6b30889efbb9fab9aa598092d08887826a7b2a3069b3bd5155dede28d9866f3
              # - type: git
              #   url: https://gitlab.gnome.org/GNOME/gtk.git
              #   tag: "2.24.32"
              #   commit: ed7d3e25f8b6debae6ccc8b50d1329155338cab8
            modules:
              # - name: automake-1.15
              #   # gtk+2.0 complains about needing an earlier version of automake than the 1.16 in the sdk
              #   cleanup:
              #     - '*'
              #   sources:
              #     - type: archive
              #       url: https://ftp.gnu.org/gnu/automake/automake-1.15.1.tar.xz
              #       sha256: af6ba39142220687c500f79b4aa2f181d9b24e4f8d8ec497cea4ba26c64bedaf
              - name: gdk-pixbuf
                buildsystem: meson
                cleanup:
                  - '/include'
                  - '*.a'
                sources:
                  - type: git
                    url: https://salsa.debian.org/gnome-team/gdk-pixbuf.git
                    commit: 3f0d33cab4fe203f5c8cbeed13af70346ee2b5b4
                    tag: debian/2.40.0+dfsg-1
                  - type: shell
                    commands:
                      - |
                        for PATCH_FILE in $(cat debian/patches/series); do
                          patch -p1 -i debian/patches/${PATCH_FILE}
                        done
      - name: wget
        buildsystem: autotools
        cleanup:
          # Remove module at the end of packaging to not ship it.
          - '*'
        sources:
          - type: archive
            url: https://ftp.gnu.org/gnu/wget/wget-1.20.3.tar.gz
            sha512: e8b82b40e270296228094a78d47f81580bdbdea9e6b93fd61b37dccb39430aeb9bda5397dc53a31c952a61629383c7e2a8c8abf414c8a4dd369af6ecf2717e6c
      - name: mono5-sil
        post-install:
          - cert-sync /etc/ssl/certs/ca-certificates.crt
        cleanup:
          - '/include'
          - '*.a'
          - '/lib/monodoc'
          - '/lib/mono/msbuild'
          - '/lib/mono/[23]*'
        sources:
          - type: git
            url: https://github.com/sillsdev/mono.git
            # Past sil/5.16.0.179
            commit: 3bb5d7c98c3bc6f977bc7960f3a541bc0acba715
          - type: archive
            # Update URL by doing: cd .../path/to/mono-repo && .../determine-monolite-url
            url: https://download.mono-project.com/monolite/monolite-linux-1051600011-latest.tar.gz
            sha512: b48bb273f5a9107f9bb9795d47277aeaaeb458588a6e011676bb9a152b83759f305cf1031a5e74a62145854ef17026cb1aa20ea9adb5e6b15f275b9d6af585db
            dest: mcs/class/lib/monolite-linux/1051600011
        modules:
          - name: python-2.7
            # Build Python 2 without cleaning away parts that we still need, like shared-modules/python2.7 does.
            config-opts:
              - --enable-shared
              - --with-system-expat
              - --with-system-ffi
              - --enable-unicode=ucs4
            post-install:
              - chmod 644 ${FLATPAK_DEST}/lib/libpython2.7.so.1.0
            cleanup:
              - '/include'
              - '*.a'
              - '*.o'
            sources:
              - type: archive
                url: https://www.python.org/ftp/python/2.7.18/Python-2.7.18.tar.xz
                sha256: b62c0e7937551d0cc02b8fd5cb0f544f9405bafc9a54d3808ed4594812edef43
      - name: gtk-sharp
        config-opts:
          - --disable-gtk-doc
          - --disable-man
        cleanup:
          - '/include'
          - '*.a'
        sources:
          - type: git
            url: https://github.com/sillsdev/gtk-sharp.git
            branch: develop
            commit: fcf1dd40d4892be309dd450bcda2026ddece4480
          - type: script
            commands:
              - NOCONFIGURE=1 ./bootstrap-2.12
      - name: mono5-sil-msbuild
        # It was challenging to build msbuild from source. Every other project
        # appears to fetch binaries rather than build msbuild. Following that.
        buildsystem: simple
        build-commands:
          # Extract opt/mono5-sil/* into /app/
          - for package in *.deb; do
              mkdir "${package}-dir" &&
                (cd "${package}-dir" && ar x ../"${package}") &&
                tar -C /app -x -f "${package}-dir"/data.tar.xz --strip-components=3 ./opt/mono5-sil;
            done
          # Same-character-count path to /app since some binary files are going to be modified too.
          - perl -pi -e 's#/opt/mono5-sil#/./././././app#g' /app/bin/*
        sources:
          - type: file
            url: http://linux.lsdev.sil.org/ubuntu/pool/main/m/mono5-sil-msbuild/mono5-sil-msbuild_15.8+xamarinxplat.2018.07.31.22.43-0xamarin5+ubuntu1804b1_all.deb
            sha256: 758274d8bc438f325fc5fc808c0482ab50eb2bdaf02f61747888e190760753de
      - name: libgdiplus
        build-options:
          prefix: /app
          env:
            MONO_PREFIX: /app
        config-opts:
          - --with-pango
        cleanup:
          - '/include'
          - '*.a'
        sources:
          - type: git
            url: https://github.com/sillsdev/libgdiplus
            tag: merge/5.6.0
            commit: b9c581ba87da89651d5ec56c5da0960ab739a63a
        modules:
          - name: giflib
            buildsystem: simple
            build-commands:
              # libgdiplus needs GifQuantizeBuffer
              - patch -i debian/patches/revert-GifQuantizeBuffer-remove-from-lib.patch
              # Skip building documentation
              - "echo >doc/Makefile all:"
              # Install into /app so it gets picked up by libgdiplus before
              # another giflib that doesnt have GifQuantizeBuffer. Maybe I
              # should adjust libgdiplus's libdir instead.
              - make PREFIX=/app
              - make PREFIX=/app install
            cleanup:
              - '/include'
              - '*.a'
            sources:
              - type: git
                url: https://salsa.debian.org/deiv-guest/giflib.git
                commit: de2120737dbbeb00728054232a21c6b03c1ae687
      - name: icu-fw
        # FW ICU should install to paths like
        # /app/lib/fieldworks/lib/libicuuc.so . The icu-fw package debian/rules
        # file installs bin/* and sbin/* to icu-bin/ . The FieldWorks build
        # expects icu-config to be here, such as in _init.mak.lnx and environ.
        config-opts:
          - --prefix=/app/lib/fieldworks
          - --bindir=/app/lib/fieldworks/icu-bin
          - --sbindir=/app/lib/fieldworks/icu-bin
        subdir: source
        cleanup:
          - '/lib/*/include'
        sources:
          - type: git
            url: https://github.com/sillsdev/icu.git
            branch: FieldWorks
            commit: f648b14cd744202c24648c5f76847621721e1ae9
      - name: fieldworks-enc-converters
        #(TODO apply/move/something this comment.) Note that trying to get fw FwCoreDlgs.csproj to find ECInterfaces.dll was a pain and wasn't solved by environment variables or msbuild properties or a .user file. I needed to change the hintpath from /usr/lib/fieldworks to /whatever, for it to be found. i could have also probably pre-copied it into Output/Release.
        buildsystem: autotools
        build-options:
          prepend-ld-library-path: /app/lib/fieldworks/lib
          env:
            FIELDWORKS: "1"
            PYTHON_VERSION: "2.7"
            EC_DOWNLOAD_NUGETEXE: "false"
            EC_DOWNLOAD_DEPS: "true"
            # I don't remember if I caused this, but even tho
            # `pkg-config --libs python-2.7` gives '-L/app/lib -lpython2.7',
            # we ended up using '-L/app/lib/python2.7 -lpython2.7' and failing
            # to find -lpython2.7. Override.
            PYTHON_LDFLAGS: "-L/app/lib -lpython2.7"
            REGROOT: "/app/share/encoding-converters"
        config-opts:
          - --prefix=/app
        sources:
          - type: git
            url: https://github.com/silnrsi/encoding-converters-core.git
            # Using branch master
            commit: aee4ff72bd3894eba96de7978990061e36b4784c
          - type: shell
            # FieldWorks Encoding Converters expects a shared directory where
            # multiple users and applications on the same computer can write
            # shared data to. This has been /var/lib/fieldworks when using
            # FieldWorks as installed by an apt/deb package. At compile and
            # installation time, the Makefile.in REGROOT and REGKEY values are
            # used, destination directories are created with permissions, and
            # some initial files are copied in. ECDriver.cpp picks up REGROOT.
            # Util.cs expects the folder specified (/var/lib/fieldworks) to
            # match REGROOT. It looks like some things
            # (like src/AppDataMover/Program.cs) will have trouble if the
            # directory doesn't exist or can't be written to. Tho it looks like
            # AppDataMover is only used in Windows, not Linux.
            # After some discussions, EC files will be shipped in a read-only
            # location, and an initially (mostly?) empty location in
            # XDG_DATA_HOME will be used for read+write files and the mapping
            # registry.
            # I don't want to let EC install files to /var/lib/fieldworks, from
            # which we copy those initial files into a new+writable location
            # because I want to expose any existing system /var/lib/fieldworks
            # so we can migrate or use old files from there (created by a user
            # using FW from a .deb package).
            # Let Makefile.in copy the initial files to
            # PREFIX/share/encoding-converters. Have C# read+write files in
            # XDG_DATA_HOME.
            commands:
              - |
                set -xueo pipefail
                # Adjust prefix
                # Note: EncCnvtrs/AutoConfigDialog.cs wants to find a help file
                # in a path specified by the RootDir registry key, but it
                # doesn't look like that help file is even being installed for
                # Linux. So it may not matter what the RootDir registry key
                # value is set to, but set it to /app/lib/fieldworks in case.
                perl -pi -e 's|/usr|/app|g' values.xml
                perl -pi -e 's|/usr/lib/fieldworks/icu-bin/icu-config|/app/lib/fieldworks/icu-bin/icu-config|' Makefile.in
          - type: file
            url: https://api.nuget.org/v3-flatcontainer/Geckofx45.64.Linux/45.0.21/Geckofx45.64.Linux.45.0.21.nupkg
            sha512: d34f7175793bdfc4dcfa0b404bf7d6f2a27ba29389623a23c4d6383281fedf7f8014474775f4321af21ad9eab2817e5309934b81b918296fb518c23064272dfe
            dest: nuget-sources/
          - type: file
            url: https://api.nuget.org/v3-flatcontainer/Geckofx45.32.Linux/45.0.21/Geckofx45.32.Linux.45.0.21.nupkg
            sha512: 677c1dea32bd8631e859a7ddb2e72971a5db5561e9bc3ddced9a5bd451395f78719d3001b1cea908025707bb34175ecbc698c9ca965a44535bb4e9c83687832f
            dest: nuget-sources/
          - type: file
            url: https://api.nuget.org/v3-flatcontainer/NUnit/2.6.4/NUnit.2.6.4.nupkg
            sha512: e0510c05364d512d810d8bc5741462cb8eeef06b45101f81106f5489fd9f9987d07050320d4306c41c9bc76fe186735a8e3544be0b496dc416617cf0bdb99600
            dest: nuget-sources/
          - type: file
            url: https://dist.nuget.org/win-x86-commandline/v3.4.4/nuget.exe
            sha512: 3b404655c39cfc39334c8437ff2c7d6007e23262daa7bb34863fdd6f2e7da9a89ab97176a52b1e8a99327fde3e9decc29c450664492af73680f5a715a72aacf3
            dest: build/
          # Use local nuget packages
          - type: shell
            commands:
              - |
                tee nuget.config <<< '<?xml version="1.0" encoding="utf-8"?>
                <configuration>
                  <packageSources>
                    <add key="LocalNugetPackages" value="'$(pwd)/nuget-sources'" />
                  </packageSources>
                  <disabledPackageSources>
                    <add key="nuget.org" value="true" />
                  </disabledPackageSources>
                </configuration>'
        modules:
          - name: teckit
            cleanup:
              - '/include'
              - '*.a'
            sources:
              - type: git
                url: https://github.com/silnrsi/teckit
                tag: v2.5.10
                commit: 1c510d4de7ff844207b1273e856fd27a15b3486d

      - name: flexbridge
        buildsystem: simple
        build-options:
          env:
            PREFIX: /app
            MONO_PREFIX: /app
            MONO_SILPKGDIR: /app
            CONFIGURATION: Release
            XDG_DATA_HOME: xdg-data-home
        build-commands:
          - cd nuget-specific && for package in *.nupkg; do mkdir -p "../packages/$(basename "${package}" .nupkg)"; unzip "${package}" -d "../packages/$(basename "${package}" .nupkg)" ;done
          # Use the same version of geckofx used by FieldWorks (in FieldWorks.git Build/nuget-linux/packages.config ).
          - perl -pi -e 's#.*Geckofx60.32.*##' src/FLExBridge/FLExBridge.csproj
          - perl -pi -e 's#.*Geckofx60.64.*#<PackageReference Include="Geckofx45.64.Linux" Version="45.0.36" />#' src/FLExBridge/FLExBridge.csproj

          - make process_l10ns

          # As an improvement, the version information could still be extracted
          # with something like dotnet running GitVersion.CommandLine; see
          # https://github.com/sillsdev/flexbridge/issues/318 .
          - msbuild build/FLExBridge.proj -p:Configuration=${CONFIGURATION} -p:DisableGitVersionTask=true -p:GitVersion_SemVer=1.2.3 -p:Version=1.2.3 -p:WriteVersionInfoToBuildLog=false
          # Fix path on fixutf8 extension
          - perl -ni -e 'print unless /^fixutf8/' Mercurial/mercurial.ini
          - tee --append Mercurial/mercurial.ini <<< "fixutf8=/app/lib/flexbridge/MercurialExtensions/fixutf8/fixutf8.py"
          # Help hg find python (in /app).
          - perl -pi -e 's#/usr/bin/python#/usr/bin/env python#' Mercurial/hg

          - make install-core
        sources:
          - type: git
            url: https://github.com/sillsdev/flexbridge.git
            #branch: develop
            # temporarily a PR commit until merged
            commit: a652bbf299a885b3fb858ab823a2ae88a1149b65
            # branch: develop
            # branch: feature/nuget
            # TODO temporarily using task/gv until merged into feature/nuget.
            #branch: task/gv
            #branch: task/flatpak
            # branch: hack-nuget-build
            # commit: f1117e3ad45502dd527c465f9862923e700e5a29
            # url: ../flexbridge
            # branch: develop
          - type: file
            # To update: Choose a new l10n artifact at
            # https://github.com/sillsdev/flexbridge/releases , possibly after
            # running the localizations GHA.
            url: https://github.com/sillsdev/flexbridge/releases/download/l10n-v3.3.0-38-gf6ef2ba8/FieldWorksL10ns.zip
            sha512: d395f26be1ef1777351e5515e34a3f7004d126590b00049aa5ec03d7ab392af60a26bce31a6af16a9eefdb5e79854f8bf24d40a61aed214558b3f35041b53149
            dest: l10n/
          - type: file
            url: https://dist.nuget.org/win-x86-commandline/v5.9.0/nuget.exe
            sha512: 980b62387ce9540eff0d49ef6dd5b4da121a8648646a465bc6445534e9ec0d7605483fad933b26f9b0b3797db4d4b1ec82ed354b3daf13e1dcc0818292815dca
            dest: build/
          # These nuget packages are installed by build/FLExBridge.proj by
          # directly running nuget.exe. Check on what current packages and
          # versions are needed with `grep NuGetCommand build/FLExBridge.proj`.
          # Then manually edit the yml to change or add. Note that attempting to
          # install SIL.Windows.Forms.GeckoBrowserAdapter results in it trying
          # to identify dependencies to install, and works differently than the
          # other nuget installations that use a similar command. A solution is
          # to write the GeckoBrowserAdapter nuget file to dest nuget-sources,
          # rather than nuget-specific. The dependencys may not need special
          # handling, but if they start to, then note that the dependencies
          # don't seem to be mentioned in the .nupkg file itself, nor on the
          # nuget.org web site, but can be determined by running in flexbridge
          # `msbuild build/FLExBridge.proj -t:RestoreBuildTasks` and observing
          # how it resolves dependencies.
          - flexbridge-sources-nuget-specific.yml
          # Use local nuget packages
          - type: shell
            commands:
              - |
                tee nuget.config <<< '<?xml version="1.0" encoding="utf-8"?>
                <configuration>
                  <packageSources>
                    <add key="LocalNugetPackages" value="'$(pwd)/nuget-sources'" />
                  </packageSources>
                  <disabledPackageSources>
                    <add key="nuget.org" value="true" />
                  </disabledPackageSources>
                </configuration>'
          # Regenerate: Set flexbridge git dir to newer code. Then run (in
          # flathub dir):
          #   ~/code/flatpak-builder-tools/dotnet/flatpak-dotnet-generator.py flexbridge-sources-nuget.json $(find $HOME/fwrepo/flexbridge -name \*.csproj -o -name \*.proj)
          # Also, it needs geckofx45 not 60.
          - flexbridge-sources-nuget.json
          # Dependencies specified from FLExBridge.dep
          # Determine what is needed by running in the flexbridge repo:
          #   msbuild -t:DownloadDependencies build/FLExBridge.proj && cat build/FLExBridge.files
          - flexbridge-sources-deps.yml
          - type: file
            dest: build/
            path: patches/flexbridge/gitversion.json
          - type: shell
            commands:
              - tee gitversion.properties <<< 'BuildVersion=3.4.0-beta.9.0'
      - name: xchm
        # Help file viewer
        cleanup:
          - '/include'
          - '*.a'
          - '/share/icons'
          - '/share/applications'
        sources:
          - type: git
            url: https://github.com/rzvncj/xCHM
            # Version 1.31 is used in Ubuntu 20.04.
            tag: "1.31"
            commit: e983d11fd546c961501f736b2c6f93178c92fa97
          - type: patch
            # xchm would otherwise need to write to files ~/.xchmXXXXXX and
            # ~/.xchm. This won't be needed after upgrading to a newer xchm
            # version and wxWidgets v3.1.1+.
            path: patches/xchm/no-config.patch
        modules:
          - name: chmlib
            cleanup:
              - '/include'
              - '*.a'
            sources:
              - type: git
                url: https://github.com/jedwing/CHMLib
                # Latest commit, from 2009-07-03.
                commit: 2bef8d063ec7d88a8de6fd9f0513ea42ac0fa21f
              - type: script
                commands:
                  - autoreconf --install
          - name: wxWidgets
            cleanup:
              - '/include'
              - '/lib/wx/include'
              - '*.a'
            sources:
              - type: git
                url: https://github.com/wxWidgets/wxWidgets
                # v3.0.4 is used in Ubuntu 20.04.
                # v3.1.1+ is needed for xchm to write to XDG_CONFIG_HOME.
                # However, v3.1.0 appears to introduce a problem rendering the
                # chm html that still needs investigating. v3.0.5.1 still
                # worked, rendering the html.
                tag: v3.0.4
                commit: 721d62adde3f8ba8704a9cf56efeb050f652dfbf
      - name: fonts-sil-doulos
        # From https://software.sil.org/doulos/download/previous-versions/
        buildsystem: simple
        build-commands:
          - mkdir -p /app/share/fonts/truetype/doulos
          - cp -a *.ttf /app/share/fonts/truetype/doulos
        sources:
          - type: archive
            url: https://software.sil.org/downloads/r/doulos/DoulosSIL-5.000.zip
            sha512: 3698b3f330d34cfa2be93f9dfc87c113a0b3e174a40ce9c2277bb452161cda61aab4688338ab3aeaaaa3cc684cedc58bbb3f066392e3911246a230d1a9fb02f3
      - name: fonts-sil-charis
        # From https://software.sil.org/charis/download/previous-versions/
        buildsystem: simple
        build-commands:
          - mkdir -p /app/share/fonts/truetype/charis
          - cp -a *.ttf /app/share/fonts/truetype/charis
        sources:
          - type: archive
            url: https://software.sil.org/downloads/r/charis/CharisSIL-5.000.zip
            sha512: f85da6c9b93c0ef81617241219b208ca262c12fcecae1d447163b7aff31ea8bfc3f09636dcfc0a322c86201a0d551288884e4017fded5bb71bbb54c8093faaed
      - name: fonts-sil-galatia
        # From https://software.sil.org/galatia/#downloads
        buildsystem: simple
        build-commands:
          - mkdir -p /app/share/fonts/truetype/galatia
          - cp -a *.ttf /app/share/fonts/truetype/galatia
        sources:
          - type: archive
            url: https://software.sil.org/downloads/r/galatia/GalatiaSIL-2.1.zip
            sha512: ff408660ab892d04e81db24f4395ffb1e3732921a2277173dfcc1b080338c68d22aa004f3838959ece724114ff0e5cf3be101c41341ec5ba22a1736458e25672
      - name: fonts-sil-ezra
        # From https://software.sil.org/ezra/
        buildsystem: simple
        build-commands:
          - mkdir -p /app/share/fonts/truetype/ezra
          - cp -a *.ttf /app/share/fonts/truetype/ezra
        sources:
          - type: archive
            url: https://software.sil.org/downloads/r/ezra/EzraSIL-2.51.zip
            sha512: 404f273a078ce89b84c1fcb91a7d9b729a80934b1327eb62d6625db245fcd4e96400c5fb5350014011771bfeac3191481b6c95e724232355b031f46eb51aab15
